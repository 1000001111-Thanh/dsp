# Copyright (c) 2024, NVIDIA CORPORATION. All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.

"""" Configuration file for the Sphinx documentation builder."""
# -*- coding: utf-8 -*-
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# pylint: disable=invalid-name

import collections

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
import os
import sys

sys.path.insert(0, os.path.abspath(".."))
sys.path.insert(0, os.path.abspath("../src/"))

import aerial.version_aerial  # pylint: disable=wrong-import-position


# -- Project information -----------------------------------------------------
project = "pyAerial"
copyright = "2024, NVIDIA"  # pylint: disable=redefined-builtin
author = "NVIDIA"
version = aerial.version_aerial.version
release = aerial.version_aerial.release

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinx_rtd_theme",
    "sphinx.ext.doctest",
    "nbsphinx",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.imgmath",
    "sphinx.ext.viewcode",
    "sphinx_copybutton",
    "myst_parser"
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = {
    ".rst": "restructuredtext",
    ".txt": "markdown",
    ".md": "markdown",
}

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# Mock importing pycuphy
autodoc_mock_imports = ["pycuphy"]

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "collapse_navigation": True,
    "sticky_navigation": True,
    "display_version": True,
    "navigation_depth": 4,
    "style_external_links": True
}
html_show_sourcelink = False
pygments_style = "default"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".


# -- Extension configuration -------------------------------------------------

# The notebooks need to be pre-executed for this to work.
nbsphinx_execute = "never"

# Enable typehints in the description and function signature
autodoc_typehints = "description"
autodoc_member_order = "bysource"
autoclass_content = "class"
autodoc_class_signature = "separated"
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = True
napoleon_include_special_with_doc = False


# From https://stackoverflow.com/questions/61572220/python-sphinx-namedtuple-documentation
def _remove_namedtuple_attrib_docstring(
    app, what, name, obj, skip, options
):  # pylint: disable=unused-argument, missing-function-docstring
    if isinstance(obj, collections._tuplegetter):  # pylint: disable=protected-access
        return True
    return skip


# Remove module level docstrings from the documentation.
def remove_module_docstring(
    app, what, name, obj, options, lines
):  # pylint: disable=unused-argument, missing-function-docstring
    if what == "module":
        del lines[:]


def setup(app):
    """Setup documentation."""
    app.connect("autodoc-skip-member", _remove_namedtuple_attrib_docstring)
    app.connect("autodoc-process-docstring", remove_module_docstring)


# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True
